name: Build MTConnect C++ Agent

on:
  # Enable automated build once verified
  pull_request:
    paths-ignore: ["**/*.md", "LICENSE.txt", ".gitignore"]
    branches: [ "main", "main-dev" ]

  push:
    paths-ignore: ["**/*.md", "LICENSE.txt", ".gitignore"]
    branches: [ "main", "main-dev" ]

  # Allow manually run workflows
  workflow_dispatch:

jobs:
  build_windows:
    runs-on: windows-2019
    strategy:
      matrix:
        shared: ["False", "True"]
        include:
          - shared: "False"
            profile: "vs64"
          - shared: "True"
            profile: "vs64shared"

    steps:
    - name: Checkout Agent
      uses: actions/checkout@v3

    - name: Install Conan
      uses: turtlebrowser/get-conan@v1.2

    - name: Install GitHub Release
      uses: tcnksm/ghr@latest
      
    - name: Initialize VS Dev Env
      uses: seanmiddleditch/gha-setup-vsdevenv@master

    - name: Build and Test C++ Agent
      run: |
        conan profile detect -f
        conan create . --build=missing -pr conan/profiles/${{ matrix.profile }}  -o shared=${{ matrix.shared }} -o with_docs=False -o cpack=True

    - name: Release verion if tagged
      run: |
        ghr -t 

  build_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shared: ["True", "False"]
            
    steps:
    - name: Checkout Agent
      uses: actions/checkout@v3

    - name: Install dependencies
      shell: bash
      run: |
        sudo apt install -y build-essential cmake gcc-11 g++-11 python3 autoconf automake
      
    - name: Install Conan
      uses: turtlebrowser/get-conan@v1.2
      
    - name: Build and Test C++ Agent
      shell: bash
      run: |
        conan profile detect -f
        conan create . --build=missing -pr conan/profiles/gcc  -o shared=${{ matrix.shared }} -o with_docs=False -o cpack=True
        
  build_macos:
    runs-on: macos-latest
    strategy:
      matrix:
        shared: ["True", "False"]
            
    steps:
    - name: Checkout Agent
      uses: actions/checkout@v3

    - name: Install Conan
      uses: turtlebrowser/get-conan@v1.2
      
    - name: Build and Test C++ Agent
      shell: bash
      run: |
        conan profile detect -f
        conan create . --build=missing -pr conan/profiles/macos  -o shared=${{ matrix.shared }} -o with_docs=False -o cpack=True
        
        
    
