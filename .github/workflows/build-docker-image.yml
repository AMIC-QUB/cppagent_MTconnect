# build docker image

# needs github secrets set for -
#   DOCKERHUB_USERNAME - ie mtconnect
#   DOCKERHUB_TOKEN - token for that account

# BE SURE TO UPDATE TAG FOR DOCKER IMAGE BEFORE BUILDING -
# see CMakeLists.txt for current version.

name: Build Docker image

# variables
# can use these below, eg with ${{ env.TAG }}
env:
  TAG: 2.0.0.7
  PLATFORMS: linux/amd64,linux/arm64

# when to run workflow
on:
  # # run on push or pull request events for the master branch
  # push:
  #   branches: [ master ]
  # pull_request:
  #   branches: [ master ]

  # allows you to run this workflow manually from the actions tab
  workflow_dispatch:

# a workflow run has one or more jobs that can run sequentially or in parallel
jobs:
  # this workflow contains a single job called "build"
  build:
    # the type of runner that the job will run on
    runs-on: ubuntu-latest

    # steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # checks-out your repository under $GITHUB_WORKSPACE
      # see https://github.com/actions/checkout
      - uses: actions/checkout@v3
        with:
          ref: master

      # the QEMU emulator lets us build for arm processors also
      # see https://github.com/docker/setup-qemu-action
      - name: Set up QEMU emulator
        uses: docker/setup-qemu-action@v1

      # see https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # see https://github.com/docker/build-push-action
      - name: Build image and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: ${{ env.PLATFORMS }}

          # docker hub user/repo:tag
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/agent:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/agent:${{ env.TAG }}

          # push to docker hub
          push: true
